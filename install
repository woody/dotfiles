#!/usr/bin/env bash
# Install ~/.dotfiles

# More strict
set -e
set -u


sudo -v

# Sudo keep alive for long-running install that need sudo internally
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &


DOTFILES_LOCAL="$HOME/.dotfiles"
DOTFILES_REMOTE="https://github.com/woody/dotfiles.git"

IS_DEV=false

#Parse arguments
for arg in "$@"; do
  case $arg in
    --dev)
      IS_DEV=true
      ;;
  esac
done

# Skip over clone from remote while development.
if $IS_DEV; then
  DOTFILES_DEV=$(/usr/bin/dirname $0)

  [[ $DOTFILES_DEV == "." ]] && {
    DOTFILES_DEV=$(/bin/pwd)
  }
  [ -L $DOTFILES_LOCAL ] || {
    # Link DEV to LOCAL
    $(/usr/bin/which ln) -sF $DOTFILES_DEV $DOTFILES_LOCAL
  }
else
  [ -e $DOTFILES_LOCAL ] && {
    # Checkout ~/.dotfiles existence
    echo "~/.dotfiles exists, and shouldn't installed again." >&2
    exit
  } || {
    # Clone from repo
    $(/usr/bin/which git) clone --recursive --quite $DOTFILES_REMOTE $DOTFILES_LOCAL
  }
fi

# Export PATH /usr/local/bin
$(/usr/bin/which ruby) -e 'abort unless ENV["PATH"].split(":").include? "/usr/local/bin"' \
|| export PATH=/usr/local/bin:$PATH


for lib in $DOTFILES_LOCAL/lib/*.sh; do
  source "$lib"
done
